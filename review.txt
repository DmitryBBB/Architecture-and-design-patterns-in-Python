Антипаттерны в коде

1)Magic Number // Магические числа
-Не нашел в коде


2)Spaghetti Code // Спагетти-код
-Есть! Т.к. переписывал приложение на ORM


3)Lasagna Code // Лазанья-код
-Есть, но в нашем случае это не анти-паттерн.
-Например Middleware нужны для авторизации IP адресов.


4)Blind faith // Слепая вера
-Есть! Ввод данных от пользователя при создании студента и наименовании курса, а также обратная связь


5)Cryptic Code // Шифрокод
-Не найдено.

6)Hard Code // Жёсткое кодирование
Есть, в рамках создания DataMapper. Думаю можно сделать универсальный mapper.

7)Soft Code // Мягкое кодирование
-Не нашел

8)Lava flow // Поток лавы
-Не нашел.

9)Anemic Domain Model // Боязнь размещать логику в объектах предметной области
-Не найдено.


10)God object (The Blob) // Божественный объект
-Не нашел. Мы все делали по паттернам с помощью абстрактных классов и наследования.


11)Poltergeist // Полтергейст
-Не найдено.

Антипаттерны ООП

12)Singletonitis // Сплошное одиночество
-Только логгер.

13)Privatization // Приватизация
-Нет ни одного приватного метода или атрибута.



Методологические антипаттерны

14)Copy — Paste // Программирование методом копирования — вставки
-Чуть-чуть)


15)Golden hammer // Золотой молоток
-Нету


16)Mprobability factor // Фактор невероятности
-Нет такого.


17)Premature optimization // Преждевременная оптимизация
Нету. Но оптимизировать уже можно. Проект уже принял более менее стабильную форму.


18)Reinventing the wheel // Изобретение велосипеда
-Да, ORM .


19)Reinventing the square wheel // Изобретение квадратного колеса
-Да, ORM .



Архитектурные антипаттерны

20)Abstract Inversion // Инверсия абстракции
-Нет ни одного приватного метода или атрибута.


21)Big ball of mud // Большой комок грязи
-Думаю что есть немного. ORM – сильно структура проекта усложнилась.


22)Magic button // Волшебная кнопка
Нет. Все по правилу: Толстая модель / тупой шаблон / худой контроллер
